<?php

include_once "prevent_direct_access.php";
require_once 'util_funcs.php';

if (!isset($_FILES)) echo "No file uploaded";
elseif ($file = check_for_uploads('user_uploaded_file')) {
    $filename = sanitizeString($file['name']);
    $file_content = file_get_contents($file['tmp_name'], NULL, NULL, NULL, 20);
    echo "Uploaded: $filename\nThe file is processing...\n";
    if ($file_content) {
        if ($result = detect_signature($file_content)) {
            echo "File process successfully\n";
            if ($result[1]) {
                $per = $result[1];
                $malw_names = $result[0][0];
                unset($result[0][0]);
                foreach ($result[0] as $malw) {
                    $malw_names = $malw_names . ', ' . $malw;
                }
                echo "$filename is $per% likely of being infected with\n$malw_names\nmalware";
            } else {
                echo "$filename is unlikely to be infected";
            }
        }
    } else die("Unable to check for signature");
} else die("FATAL ERROR\nUnable to process this file!!");


function detect_signature($content)
{
    global $hn, $db, $un, $pw;
    $len = strlen($content);
    if ($conn = get_connection($hn, $db, $un, $pw)) {
        if ($conn->connect_error) {
            return false;
        }
        $query = "SELECT * FROM malwares WHERE signature LIKE ?";
        $stmt = $conn->prepare($query);

        $count = 0;
        $errors = array();
        while ($len) {
            $snip = '%' . substr($content, 0, $len) . '%';
            $stmt->bind_param('s', $snip);
            if ($stmt->execute()) {
                $stmt->bind_result($malw_name, $sig);
                $stmt->fetch();
                if ($malw_name) {
                    if (!in_array($malw_name, $errors)) $errors[] = $malw_name;
                    $count++;
                }
            } else die("Could not execute");
            $len--;
        }
        if ($count) {
            return array($errors, $count * 5);
        } elseif (!$len) {
            return array(false, 0);
        } else return false;
    }
    echo "Failed to fetch result";
    return false;
}

?>