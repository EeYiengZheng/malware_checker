<?php
include_once "prevent_direct_access.php";
// connect to mysql root
require_once 'login.php';

/**
 * get a connection to the database with values from login.php
 * @param $hn string host name
 * @param $db string database name
 * @param $un string username
 * @param $pw string password
 * @return mysqli|null return a connection or null if connection fail
 */
function get_connection($hn, $db, $un, $pw)
{
    $conn = null;
    try {
        $conn = new mysqli($hn, $un, $pw, $db);
        if ($conn->connect_error) {

            print("<h2>failed to connect to $db <br>500: sorry something is wrong with the server</h2>");
            exit();
        }
    } catch (Exception $e) {
        print("<h2>failed to connect to $db <br>500: sorry something is wrong with the server</h2>");
        exit();
    }

    return $conn;
}

/**
 * check if a file was uploaded
 * @param $filename string name of file to check
 * @return bool true if file exists
 */
function check_for_uploads($filename)
{
    if ($_FILES) {
        $uploaded_file = $_FILES[$filename];
        return $uploaded_file;
    }
    return false;
}

/**
 * read content of a string as byte array
 * @param $str string input
 * @return array|bool return byte array or false
 */
function getBytesArray($str)
{
    $l = strlen($str);
    if ($l < 1) return false;
    if ($byteArray = unpack("C$l", $str)) return $byteArray;
    return false;
}


// Variable validation

function validate_malware_name($field)
{
    $fail = "";
    if (!$field) $fail .= "No malware name provided.\\n";
    if (strlen($field) > 64) $fail .= "Name needs to be less than 64 characters.\\n";
    if (preg_match("/[^A-Z0-9]/i", $field)) $fail .= "Only a-z A-Z 0-9 are allowed in malware name.\\n";
    if (!$fail) {
        return "";
    }
    return $fail;

}

// validate username
function validate_username($field)
{
    $field = trim($field);
    if ($field === '') return "No username was entered<br>";
    if (strlen($field) > 32) return "Username need to be less than 32 characters<br>";
    if (!preg_match("/[a-zA-Z0-9_\-]/", $field)) return "Username can only contain a-zA-Z0-9 _ and -<br>";
    return "";
}

// validate password
function validate_password($field)
{
    $field = trim($field);
    if (strlen($field) < 8 || strlen($field) > 64) return "Password need to be between 8 to 64 characters<br>";
    elseif (preg_match('/[^a-zA-Z0-9!@#\$%\^&\*_\-=\+`~]/', $field)) return "Password can only contain a-z A-Z 0-9 and ~`!@#$%^&*_-=+<br>";
    return "";
}

// sanitize string to prevent XSS
function sanitizeString($var)
{
    $var = stripslashes($var);
    $var = strip_tags($var);
    $var = htmlentities($var);
    return $var;
}

// sanitize string to prevent SQL injection
function sanitizeMySQL($connection, $var)
{
    $var = $connection->real_escape_string($var);
    $var = sanitizeString($var);
    return $var;
}


// helper: write output for debugging
function test_output($input)
{
    echo '<pre>';
    print_r($input);
    echo '</pre>';
}

?>